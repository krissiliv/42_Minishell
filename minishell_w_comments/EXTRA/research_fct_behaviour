Your shell must implement the following builtins:
______________________________________________
◦ echo with option -n
echo														outputs the strings that are passed to it as arguments followed by  new line
echo -n 													does the same but without newline in the end (Zeilenumbruch Unterdrückung)
echo \														echos from stdin (whatever you write there after the > )
echo $PATH													echos the PATH variable from envv - funktioniert auch mit "$PWD"

echo and print are more or less the same. 
They are both used to output data to the screen. 
When you set a $ sign in frot of a text, 
echo will interpret it as a variable.
Else it will be interpreted as a text.
The differences are small - echo has no return value.

_______________
https://www.youtube.com/watch?v=9ZpL8iDU7LY&list=PLGU1kcPKHMKj5yA0RPb5AK4QAhexmQwrW&index=8

can also define variable by typing:
mynewvar="Hello"
echo $mynewvar                                              should always use lowercase letters to define a new variable to prevent overwriting the global variables (as they are always written in uppercase letters)

_______________ - NICHT ZU MACHEN
rot="\033[31m" 
echo -e "${rot}Roter Text"									diese Kombi führt dazu, dass die cmdline tatsächlich rot wird
weis="\033[37m"
echo -e "${weis}"											change back to white
_______________
______________________________________________
◦ cd with only a relative or absolute path

______________________________________________
◦ pwd with no options

______________________________________________
◦ export with no options

______________________________________________
◦ unset with no options

______________________________________________
◦ env with no options or arguments

______________________________________________
◦ exit with no options

____________________________________________________________________________________________
- The shell will work only in interactive mode (no scripts, i.e. the executable takes no arguments)

____________________________________________________________________________________________
- Run simple commands with absolute, relative path (e.g. /bin/ls, ../bin/ls)

____________________________________________________________________________________________
- Run simple commands without a path (e.g. ls, cat, grep, etc…)

____________________________________________________________________________________________
- Have a working history (you can navigate through commands with up/down arrows)

____________________________________________________________________________________________
- Implement pipes (|)

____________________________________________________________________________________________ 
- Implement redirections (<, >, >>)

____________________________________________________________________________________________
- Implement the here-doc (<<)

____________________________________________________________________________________________
- Handle double quotes ("") and single quotes (''), which should escape special characters, beside $ for double quotes.

____________________________________________________________________________________________
- Handle environment variables ($ followed by a sequence of characters).

____________________________________________________________________________________________
- Handle signals like in bash (ctrl + C, ctrl + \, ctrl + D)